def scalaBinaryVersion = "2.10"
rootProject.name = 'snappydata_' + scalaBinaryVersion

include ':snappy-core_' + scalaBinaryVersion
include ':snappy-tools_' + scalaBinaryVersion
include 'snappy-dunits'
include 'snappy-examples'

project(':snappy-core_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-core" as File
project(':snappy-tools_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-tools" as File

if (new File(rootDir, "snappy-spark/build.gradle").exists()) {
  include ':snappy-spark'
  // sub-projects of snappy-spark
  include ':snappy-spark:snappy-spark-test-tags_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-core_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-bagel_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-graphx_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-mllib_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-tools_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-network-common_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-network-shuffle_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-network-yarn_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-yarn_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-streaming_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-catalyst_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-sql_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-hive_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-hive-thriftserver_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-unsafe_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-assembly_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-streaming-twitter_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-streaming-flume_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-streaming-flume-sink_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-streaming-mqtt_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-streaming-zeromq_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-examples_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-repl_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-launcher_' + scalaBinaryVersion
  include ':snappy-spark:snappy-spark-streaming-kafka_' + scalaBinaryVersion

  // sub-project directories of snappy-spark
  project(':snappy-spark:snappy-spark-test-tags_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/tags" as File
  project(':snappy-spark:snappy-spark-core_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/core" as File
  project(':snappy-spark:snappy-spark-bagel_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/bagel" as File
  project(':snappy-spark:snappy-spark-graphx_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/graphx" as File
  project(':snappy-spark:snappy-spark-mllib_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/mllib" as File
  project(':snappy-spark:snappy-spark-tools_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/tools" as File
  project(':snappy-spark:snappy-spark-network-common_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/network/common" as File
  project(':snappy-spark:snappy-spark-network-shuffle_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/network/shuffle" as File
  project(':snappy-spark:snappy-spark-network-yarn_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/network/yarn" as File
  project(':snappy-spark:snappy-spark-yarn_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/yarn" as File
  project(':snappy-spark:snappy-spark-streaming_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/streaming" as File
  project(':snappy-spark:snappy-spark-catalyst_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/sql/catalyst" as File
  project(':snappy-spark:snappy-spark-sql_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/sql/core" as File
  project(':snappy-spark:snappy-spark-hive_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/sql/hive" as File
  project(':snappy-spark:snappy-spark-hive-thriftserver_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/sql/hive-thriftserver" as File
  project(':snappy-spark:snappy-spark-unsafe_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/unsafe" as File
  project(':snappy-spark:snappy-spark-assembly_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/assembly" as File
  project(':snappy-spark:snappy-spark-streaming-twitter_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/external/twitter" as File
  project(':snappy-spark:snappy-spark-streaming-flume_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/external/flume" as File
  project(':snappy-spark:snappy-spark-streaming-flume-sink_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/external/flume-sink" as File
  project(':snappy-spark:snappy-spark-streaming-mqtt_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/external/mqtt" as File
  project(':snappy-spark:snappy-spark-streaming-zeromq_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/external/zeromq" as File
  project(':snappy-spark:snappy-spark-examples_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/examples" as File
  project(':snappy-spark:snappy-spark-repl_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/repl" as File
  project(':snappy-spark:snappy-spark-launcher_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/launcher" as File
  project(':snappy-spark:snappy-spark-streaming-kafka_' + scalaBinaryVersion).projectDir = "$rootDir/snappy-spark/external/kafka" as File
}

if (new File(rootDir, "snappy-store/build.gradle").exists()) {
  include ':snappy-store'
  // sub-projects of snappy-store
  include ':snappy-store:gemfire-jgroups'
  include ':snappy-store:gemfire-trove'
  include ':snappy-store:gemfire-joptsimple'
  include ':snappy-store:gemfire-json'
  include ':snappy-store:gemfire-junit'
  include ':snappy-store:gemfire-shared'
  include ':snappy-store:gemfire-core'
  include ':snappy-store:gemfire-web'
  include ':snappy-store:gemfire-examples'
  include ':snappy-store:gemfirexd:shared'
  include ':snappy-store:gemfirexd:prebuild'
  include ':snappy-store:gemfirexd:core'
  include ':snappy-store:gemfirexd:client'
  include ':snappy-store:gemfirexd:native'
  include ':snappy-store:gemfirexd-hibernate'
  include ':snappy-store:gemfirexd:tools'
  include ':snappy-store:tests-core'
  include ':snappy-store:tests-sql'

  project(':snappy-store:gemfire-jgroups').projectDir = "$rootDir/snappy-store/lgpl/gemfire-jgroups" as File
  project(':snappy-store:gemfire-trove').projectDir = "$rootDir/snappy-store/lgpl/gemfire-trove" as File
  project(':snappy-store:gemfirexd-hibernate').projectDir = "$rootDir/snappy-store/lgpl/gemfirexd-hibernate" as File
  project(':snappy-store:tests-core').projectDir = "$rootDir/snappy-store/tests/core" as File
  project(':snappy-store:tests-sql').projectDir = "$rootDir/snappy-store/tests/sql" as File
}

if (new File(rootDir, "spark-jobserver/build.gradle").exists()) {
  include ':spark-jobserver'
}

if (new File(rootDir, "snappy-aqp/build.gradle").exists()) {
  include ':snappy-aqp'
}
